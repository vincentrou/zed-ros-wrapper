<launch>
  <!-- Just to uncompress images for stereo_image_rect -->
  <param name="use_sim_time" type="bool" value="False"/>
  <!--<node name="republish_rgb" type="republish" pkg="image_transport" args="compressed in:=/camera/rgb/image_rect_color raw out:=/camera/rgb/image_rect_color" />
  <node name="republish_depth" type="republish" pkg="image_transport" args="compressedDepth in:=/camera/depth_registered/image_raw raw out:=/camera/depth_registered/image_raw" />-->

  <!-- Choose visualization -->
  <arg name="rviz" default="false" />
  <arg name="rtabmapviz" default="true" />
  <!-- Corresponding config files -->
  <arg name="rtabmapviz_cfg"          default="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" />
  <arg name="rviz_cfg"                default="-d $(find rtabmap_ros)/launch/config/rgbd.rviz" />

  <arg name="frame_id"                default="camera_link"/>   <!-- Fixed frame id, you may set "base_link" or "base_footprint" if they are published -->
  <arg name="time_threshold"          default="700"/>             <!-- (ms) If not 0 ms, memory management is used to keep processing time on this fixed limit. -->
  <arg name="optimize_from_last_node" default="false"/>         <!-- Optimize the map from the last node. Should be true on multi-session mapping and when time threshold is set -->
  <arg name="database_path"           default="~/.ros/rtabmap.db"/>
  <arg name="rtabmap_args"            default="--delete_db_on_start"/>              <!-- delete_db_on_start, udebug -->
  <arg name="launch_prefix"           default=""/>              <!-- for debugging purpose, it fills launch-prefix tag of the nodes -->
   
  <arg name="rgb_topic"               default="/camera/rgb/image_rect_color" />
  <arg name="depth_registered_topic"  default="/camera/depth_registered/image_raw" />
  <arg name="camera_info_topic"       default="/camera/rgb/camera_info" />
  <arg name="compressed"              default="false"/>
  <arg name="convert_depth_to_mm"     default="true"/>

  <arg name="subscribe_scan"          default="false"/>         <!-- Assuming 2D scan if set, rtabmap will do 3DoF mapping instead of 6DoF -->
  <arg name="scan_topic"              default="/scan"/>

  <arg name="visual_odometry"         default="true"/>          <!-- Generate visual odometry -->
  <arg name="odom_topic"              default="/odom"/>         <!-- Odometry topic used if visual_odometry is false -->

  <arg name="namespace"               default="rtabmap"/>
  <arg name="wait_for_transform"      default="0.1"/>

  <!-- Odometry parameters: -->
  <arg name="strategy"            default="0" />       <!-- Strategy: 0=BOW (bag-of-words) 1=Optical Flow -->
  <arg name="feature"             default="6" />       <!-- Feature type: 0=SURF 1=SIFT 2=ORB 3=FAST/FREAK 4=FAST/BRIEF 5=GFTT/FREAK 6=GFTT/BRIEF 7=BRISK -->
  <arg name="estimation"          default="1" />       <!-- Motion estimation approach: 0:3D->3D, 1:3D->2D (PnP) -->
  <arg name="nn"                  default="3" />       <!-- Nearest neighbor strategy : 0=Linear, 1=FLANN_KDTREE (SIFT, SURF), 2=FLANN_LSH, 3=BRUTEFORCE (ORB/FREAK/BRIEF/BRISK) -->
  <arg name="max_depth"           default="0" />       <!-- Maximum features depth (m) -->
  <arg name="min_inliers"         default="15" />      <!-- Minimum visual correspondences to accept a transformation (m) -->
  <arg name="inlier_distance"     default="0.1" />     <!-- RANSAC maximum inliers distance (m) -->
  <arg name="local_map"           default="1000" />    <!-- Local map size: number of unique features to keep track -->
  <arg name="variance_inliers"    default="true"/>    <!-- Variance from inverse of inliers count -->

  <!-- Nodes -->
  <group ns="$(arg namespace)">

    <!-- Odometry -->
    <node if="$(arg visual_odometry)" pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen" launch-prefix="$(arg launch_prefix)">
      <remap from="rgb/image"       to="$(arg rgb_topic)"/>
      <remap from="depth/image"     to="$(arg depth_registered_topic)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>

      <param name="frame_id"                 type="string" value="$(arg frame_id)"/>
      <param name="wait_for_transform_duration"       type="double"   value="$(arg wait_for_transform)"/>

      <param name="Odom/Strategy"            type="string" value="$(arg strategy)"/>
      <param name="Odom/FeatureType"         type="string" value="$(arg feature)"/>
      <param name="OdomBow/NNType"           type="string" value="$(arg nn)"/>
      <param name="Odom/EstimationType"      type="string" value="$(arg estimation)"/>
      <param name="Odom/MaxDepth"            type="string" value="$(arg max_depth)"/>
      <param name="Odom/MinInliers"          type="string" value="$(arg min_inliers)"/>
      <param name="Odom/InlierDistance"      type="string" value="$(arg inlier_distance)"/>
      <param name="OdomBow/LocalHistorySize" type="string" value="$(arg local_map)"/>
      <param name="Odom/FillInfoData"        type="string" value="true"/>
      <param name="Odom/VarianceFromInliersCount" type="string" value="$(arg variance_inliers)"/>
    </node>

    <!-- Visual SLAM (robot side) -->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg rtabmap_args)" launch-prefix="$(arg launch_prefix)">
      <param name="subscribe_depth"    type="bool"   value="true"/>
      <param name="subscribe_laserScan"     type="bool"   value="$(arg subscribe_scan)"/>
      <param name="frame_id"           type="string" value="$(arg frame_id)"/>
      <param name="wait_for_transform_duration" type="double"   value="$(arg wait_for_transform)"/>
      <param name="database_path"      type="string" value="$(arg database_path)"/>

      <remap from="rgb/image"       to="$(arg rgb_topic)"/>
      <remap from="depth/image"     to="$(arg depth_registered_topic)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
      <remap from="scan"            to="$(arg scan_topic)"/>
      <remap unless="$(arg visual_odometry)" from="odom"  to="$(arg odom_topic)"/>

      <param name="Rtabmap/TimeThr"           type="string" value="$(arg time_threshold)"/>
      <param name="Kp/RoiRatios" type="string" value="0.03 0.03 0.04 0.04"/>
      <param name="Kp/DetectorStrategy" type="string" value="0"/>   <!-- use SURF -->
      <param name="Kp/NNStrategy" type="string" value="1"/>         <!-- kdTree -->
      <param name="SURF/HessianThreshold" type="string" value="1000"/>
      <param name="RGBD/OptimizeFromGraphEnd" type="string" value="$(arg optimize_from_last_node)"/>

      <param name="LccBow/MaxDepth" type="string" value="5"/>
      <param name="LccBow/MinInliers" type="string" value="15"/>
      <param name="LccBow/InlierDistance" type="string" value="0.02"/>

      <param name="LccReextract/Activated" type="string" value="true"/>
      <param name="LccReextract/MaxWords" type="string" value="500"/>

      <!-- Disable graph optimization because we use map_optimizer node below -->
      <param name="RGBD/ToroIterations" type="string" value="0"/>
    </node>

    <!-- Optimizing outside rtabmap node makes it able to optimize always the global map -->
    <node pkg="rtabmap_ros" type="map_optimizer" name="map_optimizer"/>

    <node if="$(arg rviz)" pkg="rtabmap_ros" type="map_assembler" name="map_assembler">
       <param name="occupancy_grid" type="bool" value="true"/>
       <remap from="mapData" to="mapData_optimized"/>
       <remap from="grid_projection_map" to="/map"/>
    </node>

    <!-- Visualisation RTAB-Map -->
    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="$(arg rtabmapviz_cfg)" output="screen" launch-prefix="$(arg launch_prefix)">
      <param name="subscribe_depth"     type="bool"   value="true"/>
      <param name="subscribe_odom_info" type="bool"   value="$(arg visual_odometry)"/>
      <param name="frame_id"            type="string" value="$(arg frame_id)"/>
      <param name="wait_for_transform_duration"  type="double"   value="$(arg wait_for_transform)"/>

      <remap from="rgb/image"       to="$(arg rgb_topic)"/>
      <remap from="depth/image"     to="$(arg depth_registered_topic)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
      <remap unless="$(arg visual_odometry)" from="odom"  to="$(arg odom_topic)"/>
      <remap from="mapData" to="mapData_optimized"/>
    </node>

  </group>

  <!-- Visualization RVIZ -->
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="$(arg rviz_cfg)"/>
  <!-- sync cloud with odometry and voxelize the point cloud (for fast visualization in rviz) -->
  <!--<node if="$(arg rviz)" pkg="nodelet" type="nodelet" name="standalone_nodelet"  args="manager" output="screen"/>
  <node if="$(arg rviz)" pkg="nodelet" type="nodelet" name="points_xyzrgb" args="load rtabmap_ros/point_cloud_xyzrgb standalone_nodelet">
    <remap from="rgb/image"       to="data_odom_sync/image"/>
    <remap from="depth/image"     to="data_odom_sync/depth"/>
    <remap from="rgb/camera_info" to="data_odom_sync/camera_info"/>
    <remap from="cloud"           to="voxel_cloud" />

    <param name="decimation" type="double" value="2"/>
    <param name="voxel_size" type="double" value="0.02"/>
  </node>-->

</launch>
